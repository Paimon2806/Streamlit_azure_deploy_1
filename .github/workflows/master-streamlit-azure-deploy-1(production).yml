# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - streamlit-azure-deploy-1

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      # --- START: Changes for Conda integration ---
      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v2 # Use a specific version if preferred, e.g., @v2.1.1
        with:
          miniconda-version: "latest"      # Installs the latest Miniconda
          python-version: 3.9              # Specifies the Python version for the base environment
          auto-update-conda: true          # Ensures Conda is up-to-date
          auto-activate-base: true         # Activates the base environment automatically

      - name: Create and activate Conda environment
        run: |
          # Create a new conda environment named 'streamlit_env' with Python 3.9
          conda create --name streamlit_env python=3.9 -y
          # Activate the newly created environment
          conda activate streamlit_env

      - name: Install dependencies with Conda
        run: |
          # Ensure the correct conda environment is activated for this step
          conda activate streamlit_env
          # Install packages from requirements.txt using conda
          # The '-y' flag automatically answers yes to prompts
          conda install --file requirements.txt -y
          # If your packages require specific channels (e.g., conda-forge),
          # uncomment and modify the line below:
          # conda install --file requirements.txt -c conda-forge -c defaults -y
      # --- END: Changes for Conda integration ---

      # Optional: Add step to run tests here (PyTest, Django test suites, etc.)
      # Ensure the Conda environment is active if tests depend on installed packages
      # - name: Run tests
      #   run: |
      #     conda activate streamlit_env
      #     pytest

      - name: Zip artifact for deployment
        # This will zip your application code (app.py, requirements.txt, startup.sh, etc.)
        # but not the entire conda environment created on the runner.
        # Azure App Service will build its own environment based on requirements.txt.
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            release.zip
          # Removed !venv/ as it's not relevant when using Conda
          # Consider adding !**/__pycache__/ to exclude compiled Python files if desired

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.__clientidsecretname__ }}
          tenant-id: ${{ secrets.__tenantidsecretname__ }}
          subscription-id: ${{ secrets.__subscriptionidsecretname__ }}

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'streamlit-azure-deploy-1'
          slot-name: 'Production'
          # No specific `package` input needed here if `release.zip` is in the root and deployed
